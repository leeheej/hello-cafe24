each()
매개변수로 받은 것을 사용해 for in 반복문과 같이 배열이나 객체의 요소를 검사할 수 있는 메서드

//jquery 유틸리티 메서드
$.each(object, function(index, item){
});
[[[[[[$.each()]]]]]]
object와 배열 모두 사용할 수 있는 일반적인 반복 함수
== 배열과 length 속성을 갖는 배열과 유사 배열 객체들을 index를 기준으로 반복 가능
첫 번째 매개변수로 배열이나 객체를 받음. 그리고 두 번째 매개변수로 콜백함수를 받으며, 콜백함수의 인자로는 인덱스와 값을 가짐.
//객체를 선언
var arr = [
 {title : 'daum', url : 'https://daum.net'},
 {title : 'naver', url : 'https://naver.com'}
];
// $.each() 메서드의 첫 번째 매개변수로 위에서 선언한 배열을 전달
$.each(arr, function(index, item){
 // 두 번째 매개변수로는 콜백함수 인데, 콜백함수의 매개변수 중
 // 첫 번째 index는 배열의 인덱스 또는 객체의 키를 의미하고
 // 두 번째 매개변수 item은 해당 인덱스나 키가 가진 값을 의미
 var result = '';
 result += index + ':' + item.title + ',' + item.url;
 console.log(result);
 
 // 0 : daum, https://daum.net
 // 1 : naver, https://naver.com
}); // 첫 번째 매개변수에 배열을 전달. 배열을 받게 되면 콜백함수의 index,item은 배열의 인덱스와 값을 가르키게 됨

//객체를 선언
var obj = {
 daum: 'https://daum.net',
 naver: 'https://naver.com'
};
//$.each() 메서드의 첫 번째 매개변수로 위에서 선언한 객체를 전달
$.each(obj, funtion(index, item){
 //객체를 전달받으면 index는 객체의 key(property)를 가리키고 item은 키의 값을 가져옴
 var result = '';
 result += index + ':' + item;
 console.log(result);
 
 // daum : https://daum.net
 // naver : https://naver.com
});




// jquery 일반 메서드
$(selector).each(funtion(index, item){
});
[[[[[$().each()]]]]]
<ul class="list">
  <li>Lorem ipsum dolor sit amet.</li>
  <li>Lorem ior sit amet.</li>
  <li>Lorem ipsum </li>
</ul>
위와 같은 마크업이 있다는 가정.
$('.list li').each(function(index, item){
 // 인덱스는 말 그대로 인덱스
 // item은 해당 선택자인 객체를 나타냄
 $(item).addClass('li_0'+index);
 // item과 this는 같아서 일반적을 this를 많이 사용함
 // $(this).addClass('li_0'+index);
});
>>> 위 코드를 실행하면 li의 클래스에 li_00, li_01, li_02 가 추가됨



[[[[[Jquery 비슷한 id를 가진 태그 전체를 each문으로 루프 돌리기]]]]]
<script>
function tab_change(v) {
$("div[id^='tab_']").each(function() {
$(this).hide();
});
$("#tab_"+v).show();
}
</script>

<div id="tab_1" style="cursor:pointer;" onclick="javascript:tab_change(1);">탭 1 영역</div>
<div id="tab_2" style="cursor:pointer;" onclick="javascript:tab_change(2);">탭 2 영역</div>
<div id="tab_3" style="cursor:pointer;" onclick="javascript:tab_change(3);">탭 3 영역</div>


^=연산자의 의미
 id 바로 뒤에 ^=가 붙고 그 뒤에value가 있으면 뒤에 적힌 value로 시작하는 개체를 찾습니다.
반대로 id뒤에 $="value" 가 붙으면 value로 끝나는 개체를 찾아요
자주는 아니지만 필요할때 쓰기 좋은것 같아요
jquery로 ui를 꾸밀때 특히 여러가지 기법을 알아두면 쓰기 유용 하니깐요
https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=newyasin&logNo=70174550867
