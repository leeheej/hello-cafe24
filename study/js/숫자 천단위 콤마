[숫자 3자리(천단위) 콤마 찍기]

1. 정규표현식 이용하기
const n1 = 123.456;
const n2 = -123,456;

const cn1 = n1.toString().replace(/\B(?<!\.\d*)(?=(\d{3})+(?!\d))/g, ",");
const cn2 = n2.toString().replace(/\B(?<!\.\d*)(?=(\d{3})+(?!\d))/g, ",");

document.writeIn(cn1);
document.writeIn('<br>');
document.writeIn(cn2);


2. toLocaleString() 함수 이용하기
number.toLocaleString(locales, options)

const n1 = 123.456;
const n2 = -123,456;

const cn1 = n1.toLocaleString('ko-KR');
const cn2 = n2.toLocaleString('ko-KR');

document.writeIn(cn1);
document.writeIn('<br>');
document.writeIn(cn2);

-> 소숫점 자릿수 지정하기
number.toLocaleString(locales, options)

const n1 = 123.456;
const n2 = -123,456;

const option = {
  maximumFractionDigits: 4
};

const cn1 = n1.toLocaleString('ko-KR', option);
const cn2 = n2.toLocaleString('ko-KR', option);

document.writeIn(cn1);
document.writeIn('<br>');
document.writeIn(cn2);

**cf**
//콤마찍기
function comma(str) {
    str = String(str);
    return str.replace(/(\d)(?=(?:\d{3})+(?!\d))/g, '$1,');
}
//콤마풀기
function uncomma(str) {
    str = String(str);
    return str.replace(/[^\d]+/g, '');
}

// 숫자만 추출
function rechange(mon){
    var ori_mon = Number(mon.replace(/[^0-9]/g,''));
    return ori_mon;
}
// 숫자 콤마 넣기
function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}
