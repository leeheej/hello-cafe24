$("#text-box").on("change keyup paste", function(){
	alert("change");
})
input box에 사용자가 값을 입력하면 실시간으로 감지하는 함수이다

$("#input-text").on("propertychange change keyup paste input", function(){
	alert("change");
});
사용자가 일반적으로 입력했을경우에는 감지가 가능하지만 개발자도구로 변경했을 경우에는 감지가 잘 되지 않는다. 
위처럼 하면 개발자 도구를 이용하여 값을 변경해도 감지가 가능하다.

https://become-a-developer.tistory.com/entry/jquery-inputbox-text-%EB%B3%80%EA%B2%BD-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EA%B0%90%EC%A7%80
https://harrydony.tistory.com/755



* input 태그에 입력이 없으면, 타이핑 효과가 노출되게 하기 연습

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
</head>
<body>
  <style>
    #keywordTyping{position:absolute; top:0; left:0;}
    .is-typing + #keywordTyping{display:none;}
  </style>
  <form action="">
		<input type="hidden">
		<div class="searchbox">
			<fieldset>
				<legend>search</legend>
				<div class="search-layer-input is-placeholder" style="position:relative;">
					<input type="text" name="keyword" id="global-search" class="input-search input--wide" >
					<span id="keywordTyping"></span>
				</div>
			</fieldset>
		</div>
	</form>
  <script>
    $(".input-search").on("propertychange change keyup paste input",function(){
      var t = $(this).val().length;
      if(t === 0){
        $(this).addClass('is-keyword');
        $(this).removeClass('is-typing');
      }else{
        $(this).removeClass('is-keyword');
        $(this).addClass('is-typing');
      }
    });
    const $text = document.querySelector("#keywordTyping");
		// kewords
		const letters = [
			"apple","banana","orange"
		];
		// typing speed
		const speed = 100;
		let i = 0;
		// typing effet
		const typing = async() => {
			const letter = letters[i].split("");
			while (letter.length){
				await wait(speed);
				$text.innerHTML += letter.shift();
			}
			await wait(800);
			//erasing effect
			remove();
		}
		//erasing text effect
		const remove = async()=>{
			const letter = letters[i].split("");
			while(letter.length){
				await wait(speed);
				letter.pop();
				$text.innerHTML = letter.join("");
			}
			// to start next word, func try again
			i = !letters[i+1] ? 0 : i + 1;
			typing();
		}
		//delay function
		function wait(ms){
			return new Promise(res => setTimeout(res, ms))
		}
		//Initialization
		setTimeout(typing, 1500);
  </script>
</body>
</html>
