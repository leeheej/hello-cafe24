[WebFont 리소스 미리 로드]
페이지에 미리 알고 있는 URL에서 호스팅되는 특정 WebFont가 필요할 가능성이 높은 경우 리소스 우선 순위를 활용할 수 있습니다. 
<link rel="preload">를 사용하면 CSSOM이 생성될 때까지 기다릴 필요 없이 중요한 렌더링 경로 초기에 WebFont에 대한 요청이 트리거됩니다.

[텍스트 렌더링 지연 사용자 지정]
미리 로드하면 페이지의 콘텐츠가 렌더링될 때 WebFont를 사용할 수 있을 가능성이 높아지지만 보장되지는 않습니다. 
아직 사용할 수 없는 font-family을 사용하는 텍스트를 렌더링할 때 브라우저가 어떻게 작동하는지 고려해야 합니다.
 font-display를 사용하여 최신 브라우저에서 원하는 동작 방식을 알릴 수 있습니다.
 일부 브라우저에서 구현하는 기존 글꼴 시간 초과 동작과 유사하게 font-display는 글꼴 다운로드 수명을 세 가지 주요 기간으로 분할합니다.
첫 번째 기간은 글꼴 차단 기간입니다. 
이 기간 동안 글꼴이 로드되지 않으면 이를 사용하려는 모든 요소는 대신 보이지 않는 대체 글꼴로 렌더링해야 합니다. 
차단 기간 동안 글꼴이 성공적으로 로드되면 글꼴이 정상적으로 사용됩니다.
글꼴 교체 기간은 글꼴 차단 기간 직후에 발생합니다. 
이 기간 동안 글꼴이 로드되지 않으면 이를 사용하려는 모든 요소는 대신 대체 글꼴로 렌더링해야 합니다. 
스왑 기간 동안 글꼴이 성공적으로 로드되면 글꼴이 정상적으로 사용됩니다.
글꼴 오류 기간은 글꼴 교체 기간 직후에 발생합니다. 
이 기간이 시작될 때 글꼴이 아직 로드되지 않은 경우 로드 실패로 표시되어 정상적인 글꼴 폴백이 발생합니다. 그렇지 않으면 글꼴이 정상적으로 사용됩니다.
이 기간을 이해한다는 것은 font-display를 사용하여 다운로드 여부 또는 다운로드 시기에 따라 글꼴을 렌더링하는 방법을 결정할 수 있음을 의미합니다.
font-display 속성을 사용하려면 @font-face 규칙에 추가하세요.
@font-face {
  font-family: 'Awesome Font';
  font-style: normal;
  font-weight: 400;
  font-display: auto; /* or block, swap, fallback, optional */
  src: local('Awesome Font'),
       url('/fonts/awesome-l.woff2') format('woff2'), /* will be preloaded */
       url('/fonts/awesome-l.woff') format('woff'),
       url('/fonts/awesome-l.ttf') format('truetype'),
       url('/fonts/awesome-l.eot') format('embedded-opentype');
  unicode-range: U+000-5FF; /* Latin glyphs */
}

[글꼴 로딩 API]
<link rel="preload">와 CSS font-display를 사용하면 많은 오버헤드를 추가하지 않고도 글꼴 로드 및 렌더링을 크게 제어할 수 있습니다.
그러나 추가 사용자 정의가 필요하고 JavaScript를 실행하여 발생하는 오버헤드를 기꺼이 발생시키려는 경우 다른 옵션이 있습니다.
글꼴 로딩 API는 CSS 글꼴을 정의 및 조작하고 다운로드 진행률을 추적하고 기본 지연 로드 동작을 재정의하는 스크립팅 인터페이스를 제공합니다. 
예를 들어 특정 글꼴 변형이 필요하다고 확신하는 경우 이를 정의하고 브라우저에 글꼴 리소스를 즉시 가져오도록 지시할 수 있습니다.
var font = new FontFace("Awesome Font", "url(/fonts/awesome.woff2)", {
  style: 'normal', unicodeRange: 'U+000-5FF', weight: '400'
});
// don't wait for the render tree, initiate an immediate fetch!
font.load().then(function() {
  // apply the font (which may re-render text and cause a page reflow)
  // after the font has finished downloading
  document.fonts.add(font);
  document.body.style.fontFamily = "Awesome Font, serif";
  // OR... by default the content is hidden,
  // and it's rendered after the font is available
  var content = document.getElementById("content");
  content.style.visibility = "visible";
  // OR... apply your own render strategy here...
});

[웹폰트 크기 줄이기]
Google의 Noto 글꼴 모음은 전 세계의 모든 언어를 지원하는 것을 목표로 합니다. 
그러나 모든 언어가 포함된 Noto의 총 크기는 1.1GB+ ZIP 다운로드가 됩니다.
- WebFont 형식
EOT
TTF
WOFF
WOFF2
- 압축으로 글꼴 크기 줄이기
EOT 및 TTF 형식은 기본적으로 압축되지 않습니다. 이러한 형식을 제공할 때 서버가 GZIP 압축을 적용하도록 구성되어 있는지 확인하십시오.
WOFF에는 압축 기능이 내장되어 있습니다. WOFF 압축기가 최적의 압축 설정을 사용하고 있는지 확인하십시오
WOFF2는 사용자 지정 전처리 및 압축 알고리즘을 사용하여 다른 형식에 비해 ~30% 파일 크기 감소를 제공합니다. 자세한 내용 은 WOFF 2.0 평가 보고서를 참조하십시오
EOT, TTF 및 WOFF 형식에 Zopfli 압축 사용을 고려하세요. Zopfli는 zlib 호환 압축기로 gzip에 비해 파일 크기가 5% 감소합니다.
- @font-face를 사용하여 글꼴 모음 정의 







https://web.dev/use-imagemin-to-compress-images/
https://web.dev/optimize-webfont-loading/
https://web.dev/reduce-webfont-size/
