[touch-action]
* 속성
  기본적으로 터치 이벤트의 처리는 브라우저가 담당하는 영역입니다.
  touch-action 속성을 통해 어떤 요소 내에서 브라우저가 처리할 터치 액션의 목록을 지정할 수 있습니다.
  표준 터치 제스쳐로는 터치를 사용한 스크롤(panning)과 여러 손가락을 사용한 확대/축소(pinch zoom)가 존재합니다.
  touch-action:auto 이외의 값을 줄 경우, 해당 속성에 명시해준 터치 액션만 브라우저에 의해 처리됩니다.
  touch-action:pinch-zoom 속성을 갖는 엘리먼트에서는 터치를 사용한 스크롤이(js로 별도 처리를 하지 않는 이상) 무시됩니다.
  * 지원범위를 확인해서 사용할 필요가 있습니다. (아이폰12 모든 기종에서 새로고침 제스쳐와 배너 영역의 플리킹 제스쳐가 충돌이 생겨서 배너 들썩임 현상이 나왔었음)
  * touch-action:none 은 브라우저의 확대/축소 작동을 제한하여 텍스트 크기를 고정하므로 사용자의 접근성을 보장하지 못하는 문제가 발생할 수 있다.
    애플은 접근성 문제로 meta 태그에 user-scalable=no 를 의도적으로 비활성화해서, 새로 추가하여도 사용자 휴대폰 설정에 확대 축소 가능으로 되어있다면 이를 제한할 수 없게 되어있다.
  
  
  - touch-aciton:auto; // 기본값. 모든 터치 이벤트를 활성화
  - touch-aciton:none; // 기본값, 모든 터치 이벤트를 비활성화
  - touch-aciton:pin-x; // 한 손가락 수평(x축) 이동 제스처를 사용
  - touch-aciton:pin-y; // 한 손가락 수직(y축) 이동 제스처를 사용
  - touch-aciton:pinch-zoom; // 핀치 줌(여러 손가락을 사용한 확대/축소)만 허용
  - touch-aciton:pan-left; // 왼쪽 방향으로의 터치를 사용한 스크롤 허용
  - touch-aciton:pan-right; // 오른쪽 방향으로의 터치를 사용한 스크롤 허용
  - touch-aciton:pan-up; // 위쪽 방향으로의 터치를 사용한 스크롤 허용
  - touch-aciton:pan-down; // 아래쪽 방향으로의 터치를 사용한 스크롤 허용
  - pan left와 pan-right를 사용할 경우, pan-x 로 더 간결하게 사용 가능
  - 여러 방향을 결합해서 사용 가능
  - touch-aciton:manipulation; // 터치를 사용한 스크롤, 핀치 줌만 허용하고 그 외 비표준 동작(더블 탭으로 확대 등) 
